package protobufparser

import (
	"encoding/hex"
	"log"
	"testing"
)

func TestProtobufParser_Query(t *testing.T) {
	bin, err := hex.DecodeString
	if err != nil {
		t.Error(err)
		return
	}
	value, err := NewProtobufParser(bin).Query(5, 4, 3, 1, 1, 9)
	log.Println("value:", string(value.([]byte)))
}
